"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }



var _chunk4MIIZGSMjs = require('./chunk-4MIIZGSM.js');


var _chunk3B5L5EN5js = require('./chunk-3B5L5EN5.js');

// src/index.ts
var _unplugin = require('unplugin');

// src/core/options.ts
var _haspkg = require('has-pkg'); var _haspkg2 = _interopRequireDefault(_haspkg);
function resolveOptions(options) {
  const {
    scale = 1.2,
    defaultStyle = "",
    defaultClass = "",
    compiler = guessCompiler(),
    jsx = guessJSX()
  } = options;
  return {
    scale,
    defaultStyle,
    defaultClass,
    compiler,
    jsx
  };
}
function guessCompiler() {
  return getVueVersion() || (_haspkg2.default.call(void 0, "@svgr/core") ? "jsx" : "vue3");
}
function guessJSX() {
  if (_haspkg2.default.call(void 0, "preact"))
    return "preact";
  return "react";
}
function getVueVersion() {
  var _a;
  try {
    const vue = _chunk3B5L5EN5js.__require.call(void 0, "vue");
    const version = ((_a = vue == null ? void 0 : vue.default) == null ? void 0 : _a.version) || (vue == null ? void 0 : vue.version) || "3";
    return version.startsWith("2.") ? "vue2" : "vue3";
  } catch (e) {
    return null;
  }
}

// src/index.ts
var unplugin = _unplugin.createUnplugin.call(void 0, (options = {}) => {
  const resolved = resolveOptions(options);
  return {
    name: "unplugin-icons",
    resolveId(id) {
      if (_chunk4MIIZGSMjs.isIconPath.call(void 0, id)) {
        const res = _chunk4MIIZGSMjs.normalizeIconPath.call(void 0, id).replace(/\.\w+$/i, "").replace(/^\//, "");
        const ext = options.compiler === "jsx" ? ".jsx" : "";
        return res + ext;
      }
      return null;
    },
    async load(id) {
      if (_chunk4MIIZGSMjs.isIconPath.call(void 0, id))
        return await _chunk4MIIZGSMjs.generateComponentFromPath.call(void 0, id, resolved) || null;
      return null;
    }
  };
});
var src_default = unplugin;



exports.src_default = src_default;
