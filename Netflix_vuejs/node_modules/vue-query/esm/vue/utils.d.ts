import type { MutationFunction, MutationKey, MutationOptions, QueryFunction, QueryKey, QueryOptions } from "react-query/types/core";
import type { QueryFilters } from "react-query/types/core/utils";
export declare function isQueryKey(value: unknown): value is QueryKey;
export declare function parseQueryArgs<TOptions extends QueryOptions<any, any, any>>(arg1: QueryKey | TOptions, arg2?: QueryFunction | TOptions, arg3?: TOptions): TOptions;
export declare function parseFilterArgs<TFilters extends QueryFilters>(arg1?: QueryKey | TFilters, arg2?: TFilters): TFilters;
export declare function parseMutationArgs<TOptions extends MutationOptions<any, any, any, any>>(arg1: MutationKey | MutationFunction<any, any> | TOptions, arg2?: MutationFunction<any, any> | TOptions, arg3?: TOptions): TOptions;
export declare function updateState(state: Record<string, unknown>, update: Record<string, any>): void;
